#version: "3"

services:

  # ------------------------------------------------------
  # traefik
  # ------------------------------------------------------

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      #- "--api.dashboard=true"
      #- "--api.debug=true"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      #- "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      #- "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      #- "--entrypoints.websecure.address=:443"
      - "--entrypoints.ldap-tcp.address=:389/tcp"
      - "--entrypoints.ldap-udp.address=:389/udp"
      ## @TODO: ldap secure connection via tls needs manually created certificates
      ##- "--entrypoints.ldaps.address=:636/tcp"
      #- "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.email=dev+letsencrypt@medienhaus.dev"
      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.api.entrypoints: "web"
    #  #traefik.http.routers.api.entrypoints: "websecure"
    #  #traefik.http.routers.api.tls.certresolver: "myresolver"
    #  traefik.http.routers.api.rule: "Host(`traefik.${SPACES_HOSTNAME}`)"
    #  traefik.http.routers.api.service: "api@internal"
    ports:
      - "80:80"
      - "8080:8080"
      #- "443:443"
      #- "8443:8443"
    volumes:
      #- ./data/letsencrypt:/letsencrypt:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # ------------------------------------------------------
  # openldap
  # ------------------------------------------------------

  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    restart: unless-stopped
    depends_on:
      - traefik
    environment:
      LDAP_ORGANISATION: "medienhaus/"
      LDAP_DOMAIN: "medienhaus.dev"
      LDAP_BASE_DN: "dc=medienhaus,dc=dev"
      LDAP_ADMIN_PASSWORD: "${LDAP_BIND_PASSWORD}"
      LDAP_CONFIG_PASSWORD: "${LDAP_CONFIG_PASSWORD}"
      #LDAP_READONLY_USER: "false"
      #LDAP_READONLY_USER_USERNAME: "readonly"
      #LDAP_READONLY_USER_PASSWORD: "readonly"
      #LDAP_RFC2307BIS_SCHEMA: "false"
      #LDAP_BACKEND: "mdb"
      LDAP_TLS: "false"
      #LDAP_TLS_CRT_FILENAME: "ldap.crt"
      #LDAP_TLS_KEY_FILENAME: "ldap.key"
      #LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      #LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      #LDAP_TLS_ENFORCE: "false"
      #LDAP_TLS_CIPHER_SUITE: "SECURE256:+SECURE128:-VERS-TLS-ALL:+VERS-TLS1.2:-RSA:-DHE-DSS:-CAMELLIA-128-CBC:-CAMELLIA-256-CBC"
      #LDAP_TLS_VERIFY_CLIENT: "demand"
      #LDAP_REPLICATION: "false"
      #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn=\"cn=admin,cn=config\" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase=\"cn=config\" type=refreshAndPersist retry=\"60 +\" timeout=1 starttls=critical"
      #LDAP_REPLICATION_DB_SYNCPROV: "binddn=\"cn=admin,$LDAP_BASE_DN\" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase=\"$LDAP_BASE_DN\" type=refreshAndPersist interval=00:00:00:10 retry=\"60 +\" timeout=1 starttls=critical"
      #LDAP_REPLICATION_HOSTS:
      #  - ldap://ldap.example.org
      #  - ldap://ldap2.example.org
      #KEEP_EXISTING_CONFIG: "false"
      #LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      #LDAP_SSL_HELPER_PREFIX: "true"
      #HOSTNAME: # defaults to whatever docker creates; won't start if set, see github issues
      #DISABLE_CHOWN: "false"
      #LDAP_OPENLDAP_UID: # runtime docker user uid to run container as
      #LDAP_OPENLDAP_GID: # runtime docker user gid to run container as
    labels:
      traefik.enable: "true"
      traefik.tcp.routers.ldap-tcp.rule: "HostSNI(`*`)"
      traefik.tcp.routers.ldap-tcp.entrypoints: "ldap-tcp"
      traefik.udp.routers.ldap-udp.entrypoints: "ldap-udp"
    #ports:
    #  - "389:389"
    #  # @TODO: ldap secure connection via tls needs manually created certificates
    #  #- "636:636"
    volumes:
      - ./data/openldap/ldap:/var/lib/ldap:rw
      - ./data/openldap/slapd:/etc/ldap/slapd.d:rw

  ldap-user-manager:
    image: wheelybird/ldap-user-manager:latest
    container_name: ldap-user-manager
    restart: unless-stopped
    depends_on:
      - traefik
      - openldap
    environment:
      LDAP_URI: "ldap://openldap:389"
      #LDAP_URI: "ldaps://openldap:636"
      LDAP_BASE_DN: "dc=medienhaus,dc=dev"
      LDAP_ADMIN_BIND_DN: "cn=admin,dc=medienhaus,dc=dev"
      LDAP_ADMIN_BIND_PWD: "${LDAP_BIND_PASSWORD}"
      LDAP_ADMINS_GROUP: "admins"
      SERVER_HOSTNAME: "openldap.${SPACES_HOSTNAME}"
      #SERVER_PATH: "/"
      #SERVER_PORT: "80 & 443"
      #SERVER_PORT: "8389 & 8636"
      #NO_HTTPS: "false"
      NO_HTTPS: "true"
      #SERVER_KEY_FILENAME: "privatekey.key"
      #SERVER_CERT_FILENAME: "certificate.crt"
      #CA_CERT_FILENAME: ".ca.crt"
      #SESSION_TIMEOUT: "10 minutes"
      ORGANISATION_NAME: "medienhaus/"
      SITE_NAME: "ldap_user_manager"
      SHOW_POSIX_ATTRIBUTES: "false"
      LDAP_USER_OU: "users"
      LDAP_GROUP_OU: "groups"
      LDAP_REQUIRE_STARTTLS: "false"
      LDAP_IGNORE_CERT_ERRORS: "false"
      #LDAP_TLS_CACERT: ""
      #LDAP_TLS_CACERT: "$(</etc/ssl/certs/ca-certificates.crt)"
      #LDAP_TLS_CACERT_FILE: ""
      #LDAP_TLS_CACERT_FILE: "/etc/ssl/certs/ca-certificates.crt"
      LDAP_ACCOUNT_ATTRIBUTE: "uid"
      #LDAP_GROUP_MEMBERSHIP_ATTRIBUTE: "memberUID or uniqueMember"
      #LDAP_ACCOUNT_ADDITIONAL_OBJECTCLASSES: ""
      #LDAP_ACCOUNT_ADDITIONAL_ATTRIBUTES: ""
      #LDAP_ACCOUNT_ADDITIONAL_ATTRIBUTES: "cn"
      #LDAP_GROUP_MEMBERSHIP_USES_UID: "true OR false"
      #FORCE_RFC2307BIS: "false"
      #DEFAULT_USER_GROUP: "everybody"
      #DEFAULT_USER_SHELL: "/bin/bash"
      #EMAIL_DOMAIN: ""
      #ENFORCE_SAFE_SYSTEM_NAMES: "true"
      #USERNAME_FORMAT: "{first_name}-{last_name}"
      #USERNAME_REGEX: "^[a-z][a-zA-Z0-9._-]{3,32}$"
      #PASSWORD_HASH: "SHA512CRYPT"
      #ACCEPT_WEAK_PASSWORDS: "false"
      ACCEPT_WEAK_PASSWORDS: "true"
      #REMOTE_HTTP_HEADERS_LOGIN: "false"
      #SMTP_HOSTNAME: ""
      #SMTP_HOST_PORT: ""
      #SMTP_USERNAME: ""
      #SMTP_PASSWORD: ""
      #SMTP_USE_TLS: "true"
      #SMTP_USE_SSL: "false"
      #EMAIL_FROM_ADDRESS: ""
      #EMAIL_FROM_NAME: ""
      #MAIL_SUBJECT: ""
      #NEW_ACCOUNT_EMAIL_SUBJECT: ""
      #NEW_ACCOUNT_EMAIL_BODY: ""
      #RESET_PASSWORD_EMAIL_SUBJECT: ""
      #RESET_PASSWORD_EMAIL_BODY: ""
      #ACCOUNT_REQUESTS_ENABLED: "true"
      #ACCOUNT_REQUESTS_EMAIL: ""
      #LDAP_DEBUG: "false"
      #LDAP_VERBOSE_CONNECTION_LOGS: "false"
      #SESSION_DEBUG: "false"
      #SMTP_LOG_LEVEL: "0"
    labels:
      traefik.enable: "true"
      traefik.http.routers.ldap-user-manager.entrypoints: "web"
      #traefik.http.routers.ldap-user-manager.entrypoints: "websecure"
      #traefik.http.routers.ldap-user-manager.tls.certresolver: "myresolver"
      traefik.http.routers.ldap-user-manager.rule: "Host(`openldap.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "8389:80"
    #  # @TODO: ldap secure connection via tls needs manually created certificates
    #  #- "8636:443"
    # @NOTE: volume deprecated and not necessary ?
    #volumes:
    #  - ./data/ldap-user-manager:/etc/ldap:ro

  # ------------------------------------------------------
  # etherpad
  # ------------------------------------------------------

  postgres-etherpad:
    image: postgres:latest
    container_name: postgres-etherpad
    restart: unless-stopped
    environment:
      POSTGRES_DB: "etherpad"
      POSTGRES_USER: "etherpad"
      POSTGRES_PASSWORD: "${ETHERPAD_POSTGRES_PASSWORD}"
    #ports:
    #  - "5432:5432"
    volumes:
      - ./data/etherpad:/var/lib/postgresql/data:rw

  nginx-etherpad:
    image: nginx:latest
    container_name: nginx-etherpad
    restart: unless-stopped
    #env_file:
    #  - .env
    labels:
      traefik.enable: "true"
      traefik.http.routers.nginx-etherpad.entrypoints: "web"
      #traefik.http.routers.etherpad.entrypoints: "websecure"
      #traefik.http.routers.etherpad.tls.certresolver: "myresolver"
      traefik.http.routers.nginx-etherpad.rule: "Host(`write.${SPACES_HOSTNAME})"
    #ports:
    #  - "9001:80"
    volumes:
      - ./config/nginx-etherpad.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./config/nginx-etherpad.conf.template:/etc/nginx/templates:rw

  etherpad:
    #image: etherpad:latest
    build:
      context: ./etherpad-lite
      args:
        #ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_table_of_contents"
        ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_mypads ep_table_of_contents"
    container_name: etherpad
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres-etherpad
      - nginx-etherpad
    #environment:
    #  TITLE: "medienhaus/write"
    #  FAVICON: "/src/static/skins/medienhaus/img/favicon.svg"
    #  SKIN_NAME: "medienhaus"
    #  IP: "0.0.0.0"
    #  PORT: "9001"
    #  DB_TYPE: "postgres"
    #  DB_HOST: "postgres-etherpad"
    #  DB_PORT: "5432"
    #  DB_NAME: "etherpad"
    #  DB_USER: "etherpad"
    #  DB_PASS: "${ETHERPAD_POSTGRES_PASSWORD}"
    #  DEFAULT_PAD_TEXT: ""
    #  PAD_OPTIONS_NO_COLORS: "true"
    #  PAD_OPTIONS_SHOW_CONTROLS: "true"
    #  PAD_OPTIONS_SHOW_CHAT: "false"
    #  PAD_OPTIONS_SHOW_LINE_NUMBERS: "true"
    #  PAD_OPTIONS_USE_MONOSPACE_FONT: "true"
    #  PAD_OPTIONS_USER_NAME: "false"
    #  PAD_OPTIONS_USER_COLOR: "false"
    #  PAD_OPTIONS_RTL: "false"
    #  PAD_OPTIONS_ALWAYS_SHOW_CHAT: "false"
    #  PAD_OPTIONS_CHAT_AND_USERS: "false"
    #  PAD_OPTIONS_LANG: "en-us"
    #  ADMIN_PASSWORD: "${ETHERPAD_ADMIN_PASSWORD}"
    #  SOCKETIO_MAX_HTTP_BUFFER_SIZE: "10000"
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.etherpad.entrypoints: "web"
    #  #traefik.http.routers.etherpad.entrypoints: "websecure"
    #  #traefik.http.routers.etherpad.tls.certresolver: "myresolver"
    #  traefik.http.routers.etherpad.rule: "Host(`write.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "9001:9001"
    volumes:
      - ./config/etherpad.json:/opt/etherpad-lite/settings.json:ro
      - ./etherpad-skin-medienhaus:/opt/etherpad-lite/src/static/skins/medienhaus:ro

  # ------------------------------------------------------
  # spacedeck
  # ------------------------------------------------------

  postgres-spacedeck:
    image: postgres:latest
    container_name: postgres-spacedeck
    restart: unless-stopped
    environment:
      POSTGRES_DB: "spacedeck"
      POSTGRES_USER: "spacedeck"
      POSTGRES_PASSWORD: "${SPACEDECK_POSTGRES_PASSWORD}"
    #ports:
    #  - "5432:5432"
    volumes:
      - ./data/spacedeck:/var/lib/postgresql/data:rw

  nginx-spacedeck:
    image: nginx:latest
    container_name: nginx-spacedeck
    restart: unless-stopped
    #env_file:
    #  - .env
    labels:
      traefik.enable: "true"
      traefik.http.routers.nginx-spacedeck.entrypoints: "web"
      #traefik.http.routers.spacedeck.entrypoints: "websecure"
      #traefik.http.routers.spacedeck.tls.certresolver: "myresolver"
      traefik.http.routers.nginx-spacedeck.rule: "Host(`sketch.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "9666:80"
    volumes:
      - ./config/nginx-spacedeck.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./config/nginx-spacedeck.conf.template:/etc/nginx/templates:rw

  spacedeck:
    build: ./spacedeck-open
    container_name: spacedeck
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres-spacedeck
      - nginx-spacedeck
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.spacedeck.entrypoints: "web"
    #  #traefik.http.routers.spacedeck.entrypoints: "websecure"
    #  #traefik.http.routers.spacedeck.tls.certresolver: "myresolver"
    #  traefik.http.routers.spacedeck.rule: "Host(`sketch.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "9666:9666"
    volumes:
      - ./config/spacedeck.json:/app/config/default.json:ro
      - ./storage/spacedeck:/app/storage:rw
      - ./data/spacedeck:/app/database:rw

  # ------------------------------------------------------
  # matrix-synapse
  # ------------------------------------------------------

  postgres-matrix-synapse:
    image: postgres:latest
    container_name: postgres-matrix-synapse
    restart: unless-stopped
    environment:
      POSTGRES_DB: "synapse"
      POSTGRES_USER: "synapse"
      POSTGRES_PASSWORD: "${MATRIX_POSTGRES_PASSWORD}"
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    #ports:
    #  - "5432:5432"
    volumes:
      - ./data/matrix-synapse/data:/var/lib/postgresql/data:rw

  nginx-matrix-synapse:
    image: nginx:latest
    container_name: nginx-matrix-synapse
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.nginx-matrix-synapse.entrypoints: "web"
      #traefik.http.routers.nginx-matrix-synapse.entrypoints: "websecure"
      #traefik.http.routers.nginx-matrix-synapse.tls.certresolver: "myresolver"
      traefik.http.routers.nginx-matrix-synapse.rule: "Host(`matrix.${SPACES_HOSTNAME}`)"
    ports:
      - "8008:80"
      #- "8448:443"
    volumes:
      - ./config/nginx-matrix-synapse.conf:/etc/nginx/conf.d/default.conf:ro

  matrix-synapse:
    image: matrixdotorg/synapse:latest
    container_name: matrix-synapse
    restart: unless-stopped
    depends_on:
      - postgres-matrix-synapse
      - nginx-matrix-synapse
    environment:
      SYNAPSE_CONFIG_DIR: "/etc/matrix-synapse"
      SYNAPSE_CONFIG_PATH: "/etc/matrix-synapse/homeserver.yaml"
      SYNAPSE_DATA_DIR: "/data"
      UID: "0"
      GID: "0"
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.matrix-synapse.entrypoints: "web"
    #  #traefik.http.routers.nginx-matrix-synapse.entrypoints: "websecure"
    #  #traefik.http.routers.nginx-matrix-synapse.tls.certresolver: "myresolver"
    #  traefik.http.routers.matrix-synapse.rule: "Host(`matrix.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "8008:8008"
    #  #- "8448:8448"
    volumes:
      - ./data/matrix-synapse/synapse:/data:rw
      - ./config/matrix-synapse.yaml:/etc/matrix-synapse/homeserver.yaml:ro

  # ------------------------------------------------------
  # element
  # ------------------------------------------------------

  element:
    image: vectorim/element-web:latest
    container_name: element
    restart: unless-stopped
    depends_on:
      - traefik
      - matrix-synapse
    labels:
      traefik.enable: "true"
      traefik.http.routers.element.entrypoints: "web"
      #traefik.http.routers.element.entrypoints: "websecure"
      #traefik.http.routers.element.tls.certresolver: "myresolver"
      traefik.http.routers.element.rule: "Host(`element.${SPACES_HOSTNAME}`)"
    volumes:
      - ./config/element.json:/app/config.json:ro

  # ------------------------------------------------------
  # medienhaus-spaces
  # ------------------------------------------------------

  medienhaus-spaces:
    build: ./medienhaus-spaces
    container_name: medienhaus-spaces
    restart: unless-stopped
    depends_on:
      - traefik
    command: dev
    labels:
      traefik.enable: "true"
      traefik.http.routers.medienhaus-spaces.entrypoints: "web"
      #traefik.http.routers.medienhaus-spaces.entrypoints: "websecure"
      #traefik.http.routers.medienhaus-spaces.tls.certresolver: "myresolver"
      traefik.http.routers.medienhaus-spaces.rule: "Host(`${SPACES_HOSTNAME}`)"
    #ports:
    #  - "3000:3000"
    volumes:
      - ./config/medienhaus-spaces.config.js:/usr/src/app/next.config.js:ro
      - ./medienhaus-spaces:/usr/src/app:rw
      - /usr/src/app/node_modules:rw
      - /usr/src/app/.next:rw

  element-medienhaus-spaces:
    image: vectorim/element-web:latest
    container_name: element-medienhaus-spaces
    restart: unless-stopped
    depends_on:
      - traefik
      - medienhaus-spaces
    labels:
      traefik.enable: "true"
      traefik.http.routers.element-medienhaus-spaces.entrypoints: "web"
      #traefik.http.routers.element-medienhaus-spaces.entrypoints: "websecure"
      #traefik.http.routers.element-medienhaus-spaces.tls.certresolver: "myresolver"
      traefik.http.routers.element-medienhaus-spaces.rule: "Host(`${SPACES_HOSTNAME}`) && PathPrefix(`/element/`)"
      traefik.http.routers.element-medienhaus-spaces.middlewares: "element-medienhaus-spaces@docker"
      traefik.http.middlewares.element-medienhaus-spaces.stripprefix.prefixes: "/element"
    volumes:
      - ./config/element-medienhaus-spaces.json:/app/config.json:ro

# ------------------------------------------------------
# networks
# ------------------------------------------------------

networks:
  default:
    driver: bridge

# ------------------------------------------------------
# volumes (example)
# ------------------------------------------------------

#volumes:
#  medienhaus_data:
#    driver: local
