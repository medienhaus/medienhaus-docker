#version: "3"

services:

  # ------------------------------------------------------
  # traefik
  # ------------------------------------------------------

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      #- "--api.dashboard=true"
      #- "--api.debug=true"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      #- "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      #- "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      #- "--entrypoints.websecure.address=:443"
      #- "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.email=${ADMIN_CONTACT_LETSENCRYPT}"
      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.api.entrypoints: "web"
    #  #traefik.http.routers.api.entrypoints: "websecure"
    #  #traefik.http.routers.api.tls.certresolver: "myresolver"
    #  traefik.http.routers.api.rule: "Host(`traefik.${BASE_URL}`)"
    #  traefik.http.routers.api.service: "api@internal"
    ports:
      - "80:80"
      - "8080:8080"
      #- "443:443"
      #- "8443:8443"
    volumes:
      #- ./data/letsencrypt:/letsencrypt:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # ------------------------------------------------------
  # etherpad
  # ------------------------------------------------------

  postgres-etherpad:
    image: postgres:latest
    container_name: postgres-etherpad
    restart: unless-stopped
    environment:
      POSTGRES_DB: "etherpad"
      POSTGRES_USER: "etherpad"
      POSTGRES_PASSWORD: "${ETHERPAD_POSTGRES_PASSWORD}"
    #ports:
    #  - "5432:5432"
    volumes:
      - ./data/etherpad:/var/lib/postgresql/data:rw

  nginx-etherpad:
    image: nginx:latest
    container_name: nginx-etherpad
    restart: unless-stopped
    #env_file:
    #  - .env
    labels:
      traefik.enable: "true"
      traefik.http.routers.nginx-etherpad.entrypoints: "web"
      #traefik.http.routers.nginx-etherpad.entrypoints: "websecure"
      #traefik.http.routers.nginx-etherpad.tls.certresolver: "myresolver"
      traefik.http.routers.nginx-etherpad.rule: "Host(`write.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "9001:80"
    volumes:
      - ./config/nginx-etherpad.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./config/nginx-etherpad.conf.template:/etc/nginx/templates:rw

  etherpad:
    #image: etherpad:latest
    build:
      context: ./etherpad-lite
      args:
        #ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown"
        ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_mypads"
    command: sh -c "cd node_modules/ep_mypads/ && npm install ldapauth-fork@^5.0.5 && etherpad"
    container_name: etherpad
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres-etherpad
      - nginx-etherpad
    #environment:
    #  TITLE: "medienhaus/write"
    #  FAVICON: "/src/static/skins/medienhaus/img/favicon.svg"
    #  SKIN_NAME: "medienhaus"
    #  IP: "0.0.0.0"
    #  PORT: "9001"
    #  DB_TYPE: "postgres"
    #  DB_HOST: "postgres-etherpad"
    #  DB_PORT: "5432"
    #  DB_NAME: "etherpad"
    #  DB_USER: "etherpad"
    #  DB_PASS: "${ETHERPAD_POSTGRES_PASSWORD}"
    #  DEFAULT_PAD_TEXT: ""
    #  PAD_OPTIONS_NO_COLORS: "true"
    #  PAD_OPTIONS_SHOW_CONTROLS: "true"
    #  PAD_OPTIONS_SHOW_CHAT: "false"
    #  PAD_OPTIONS_SHOW_LINE_NUMBERS: "true"
    #  PAD_OPTIONS_USE_MONOSPACE_FONT: "true"
    #  PAD_OPTIONS_USER_NAME: "false"
    #  PAD_OPTIONS_USER_COLOR: "false"
    #  PAD_OPTIONS_RTL: "false"
    #  PAD_OPTIONS_ALWAYS_SHOW_CHAT: "false"
    #  PAD_OPTIONS_CHAT_AND_USERS: "false"
    #  PAD_OPTIONS_LANG: "en-us"
    #  ADMIN_PASSWORD: "${ETHERPAD_ADMIN_PASSWORD}"
    #  SOCKETIO_MAX_HTTP_BUFFER_SIZE: "10000"
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.etherpad.entrypoints: "web"
    #  #traefik.http.routers.etherpad.entrypoints: "websecure"
    #  #traefik.http.routers.etherpad.tls.certresolver: "myresolver"
    #  traefik.http.routers.etherpad.rule: "Host(`write.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "9001:9001"
    volumes:
      - ./config/etherpad.json:/opt/etherpad-lite/settings.json:ro
      - ./etherpad-skin-medienhaus:/opt/etherpad-lite/src/static/skins/medienhaus:ro

  # ------------------------------------------------------
  # spacedeck
  # ------------------------------------------------------

  postgres-spacedeck:
    image: postgres:latest
    container_name: postgres-spacedeck
    restart: unless-stopped
    environment:
      POSTGRES_DB: "spacedeck"
      POSTGRES_USER: "spacedeck"
      POSTGRES_PASSWORD: "${SPACEDECK_POSTGRES_PASSWORD}"
    #ports:
    #  - "5432:5432"
    volumes:
      - ./data/spacedeck:/var/lib/postgresql/data:rw

  nginx-spacedeck:
    image: nginx:latest
    container_name: nginx-spacedeck
    restart: unless-stopped
    #env_file:
    #  - .env
    labels:
      traefik.enable: "true"
      traefik.http.routers.nginx-spacedeck.entrypoints: "web"
      #traefik.http.routers.nginx-spacedeck.entrypoints: "websecure"
      #traefik.http.routers.nginx-spacedeck.tls.certresolver: "myresolver"
      traefik.http.routers.nginx-spacedeck.rule: "Host(`sketch.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "9666:80"
    volumes:
      - ./config/nginx-spacedeck.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./config/nginx-spacedeck.conf.template:/etc/nginx/templates:rw

  spacedeck:
    build: ./spacedeck-open
    container_name: spacedeck
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres-spacedeck
      - nginx-spacedeck
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.spacedeck.entrypoints: "web"
    #  #traefik.http.routers.spacedeck.entrypoints: "websecure"
    #  #traefik.http.routers.spacedeck.tls.certresolver: "myresolver"
    #  traefik.http.routers.spacedeck.rule: "Host(`sketch.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "9666:9666"
    volumes:
      - ./config/spacedeck.json:/app/config/default.json:ro
      - ./storage/spacedeck:/app/storage:rw
      - ./data/spacedeck:/app/database:rw

  # ------------------------------------------------------
  # matrix-synapse
  # ------------------------------------------------------

  postgres-matrix-synapse:
    image: postgres:latest
    container_name: postgres-matrix-synapse
    restart: unless-stopped
    environment:
      POSTGRES_DB: "synapse"
      POSTGRES_USER: "synapse"
      POSTGRES_PASSWORD: "${MATRIX_POSTGRES_PASSWORD}"
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    #ports:
    #  - "5432:5432"
    volumes:
      - ./data/matrix-synapse/data:/var/lib/postgresql/data:rw

  nginx-matrix-synapse:
    image: nginx:latest
    container_name: nginx-matrix-synapse
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.nginx-matrix-synapse.entrypoints: "web"
      #traefik.http.routers.nginx-matrix-synapse.entrypoints: "websecure"
      #traefik.http.routers.nginx-matrix-synapse.tls.certresolver: "myresolver"
      traefik.http.routers.nginx-matrix-synapse.rule: "Host(`${MATRIX_BASEURL}`)"
    ports:
      - "8008:80"
      #- "8448:443"
    volumes:
      - ./config/nginx-matrix-synapse.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./config/nginx-matrix-synapse.conf.template:/etc/nginx/templates:rw

  matrix-synapse:
    image: matrixdotorg/synapse:latest
    container_name: matrix-synapse
    restart: unless-stopped
    depends_on:
      - postgres-matrix-synapse
      - nginx-matrix-synapse
    environment:
      SYNAPSE_CONFIG_DIR: "/etc/matrix-synapse"
      SYNAPSE_CONFIG_PATH: "/etc/matrix-synapse/homeserver.yaml"
      SYNAPSE_DATA_DIR: "/data"
      UID: "0"
      GID: "0"
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.matrix-synapse.entrypoints: "web"
    #  #traefik.http.routers.matrix-synapse.entrypoints: "websecure"
    #  #traefik.http.routers.matrix-synapse.tls.certresolver: "myresolver"
    #  traefik.http.routers.matrix-synapse.rule: "Host(`matrix.${SPACES_HOSTNAME}`)"
    #ports:
    #  - "8008:8008"
    #  #- "8448:8448"
    volumes:
      - ./data/matrix-synapse/synapse:/data:rw
      - ./config/matrix-synapse.yaml:/etc/matrix-synapse/homeserver.yaml:ro

  # ------------------------------------------------------
  # element
  # ------------------------------------------------------

  element:
    image: vectorim/element-web:latest
    container_name: element
    restart: unless-stopped
    depends_on:
      - traefik
      - matrix-synapse
    labels:
      traefik.enable: "true"
      traefik.http.routers.element.entrypoints: "web"
      #traefik.http.routers.element.entrypoints: "websecure"
      #traefik.http.routers.element.tls.certresolver: "myresolver"
      traefik.http.routers.element.rule: "Host(`element.${SPACES_HOSTNAME}`)"
    volumes:
      - ./config/element.json:/app/config.json:ro

  # ------------------------------------------------------
  # medienhaus-spaces
  # ------------------------------------------------------

  medienhaus-spaces:
    build: ./medienhaus-spaces
    container_name: medienhaus-spaces
    restart: unless-stopped
    depends_on:
      - traefik
    command: dev
    labels:
      traefik.enable: "true"
      traefik.http.routers.medienhaus-spaces.entrypoints: "web"
      #traefik.http.routers.medienhaus-spaces.entrypoints: "websecure"
      #traefik.http.routers.medienhaus-spaces.tls.certresolver: "myresolver"
      traefik.http.routers.medienhaus-spaces.rule: "Host(`${SPACES_HOSTNAME}`)"
    #ports:
    #  - "3000:3000"
    volumes:
      - ./config/medienhaus-spaces.config.js:/usr/src/app/next.config.js:ro
      - ./medienhaus-spaces:/usr/src/app:rw
      - /usr/src/app/node_modules
      - /usr/src/app/.next

  element-medienhaus-spaces:
    image: vectorim/element-web:latest
    container_name: element-medienhaus-spaces
    restart: unless-stopped
    depends_on:
      - traefik
      - medienhaus-spaces
    labels:
      traefik.enable: "true"
      traefik.http.routers.element-medienhaus-spaces.entrypoints: "web"
      #traefik.http.routers.element-medienhaus-spaces.entrypoints: "websecure"
      #traefik.http.routers.element-medienhaus-spaces.tls.certresolver: "myresolver"
      traefik.http.routers.element-medienhaus-spaces.rule: "Host(`${SPACES_HOSTNAME}`) && PathPrefix(`/element/`)"
      traefik.http.routers.element-medienhaus-spaces.middlewares: "element-medienhaus-spaces@docker"
      traefik.http.middlewares.element-medienhaus-spaces.stripprefix.prefixes: "/element"
    volumes:
      - ./config/element-medienhaus-spaces.json:/app/config.json:ro

# ------------------------------------------------------
# networks (example)
# ------------------------------------------------------

#networks:
#  default:
#    driver: bridge

# ------------------------------------------------------
# volumes (example)
# ------------------------------------------------------

#volumes:
#  medienhaus_data:
#    driver: local
