#version: "3"

services:

  # ------------------------------------------------------
  # peertube-webserver
  # ------------------------------------------------------

  peertube-webserver:
    #image: chocobozzz/peertube-webserver:latest
    #image: nginx:latest
    build:
      context: .
      #dockerfile: ./peertube/support/docker/production/Dockerfile.nginx
      dockerfile: ./config/peertube--Dockerfile.nginx
    container_name: peertube-webserver
    restart: unless-stopped
    depends_on:
      - peertube
      - traefik
    env_file:
      #- ./peertube/support/docker/production/.env
      - ./config/peertube--.env
    #entrypoint:
    #  - ./peertube/support/docker/production/entrypoint.nginx.sh
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.peertube.entrypoints=websecure"
      #- "traefik.http.routers.peertube.tls.certresolver=myresolver"
      #- "traefik.http.routers.peertube.rule=Host(`peertube.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.http.routers.peertube.entrypoints: "websecure"
      traefik.http.routers.peertube.tls.certresolver: "myresolver"
      traefik.http.routers.peertube.rule: "Host(`peertube.develop.medienhaus.dev`)"
    #ports:
    #  - "9080:80"
    #  #- "9443:4443"
    volumes:
      - type: bind
        #source: ./peertube/support/nginx/peertube
        source: ./config/peertube--nginx.template
        target: /etc/nginx/conf.d/peertube.template
      - peertube-assets:/var/www/peertube/peertube-latest/client/dist:ro
      #- peertube-certbot:/var/www/certbot
      - ./data/peertube/data:/var/www/peertube/storage
      #- ./data/peertube/letsencrypt/conf:/etc/letsencrypt

  # ------------------------------------------------------
  # certbot
  # ------------------------------------------------------

  #certbot:
  #  image: certbot/certbot:latest
  #  container_name: certbot
  #  restart: unless-stopped
  #  depends_on:
  #    - peertube-webserver
  #  entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done;"
  #  volumes:
  #    #- ./data/certbot:/var/www/certbot
  #    - peertube-certbot:/var/www/certbot
  #    #- ./data/peertube/certbot/conf:/etc/letsencrypt
  #    - ./data/peertube/letsencrypt/conf:/etc/letsencrypt

  # ------------------------------------------------------
  # peertube
  # ------------------------------------------------------

  peertube:
    # build:
    #   context: .
    #   dockerfile: ./peertube/support/docker/production/Dockerfile.bullseye
    image: chocobozzz/peertube:production-bullseye
    container_name: peertube
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      #- postfix
    env_file:
      - ./peertube/support/docker/production/.env
    #ports:
    #  - "1935:1935"
    #  - "9000:9000"
    volumes:
      #- ./data/peertube/assets:/app/client/dist
      - peertube-assets:/app/client/dist
      - ./data/peertube/data:/data
      - ./data/peertube/config:/config

  # ------------------------------------------------------
  # redis
  # ------------------------------------------------------

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./data/redis:/data

# ------------------------------------------------------
# volumes
# ------------------------------------------------------

volumes:
  peertube-assets:
  #peertube-certbot:
