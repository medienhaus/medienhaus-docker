#version: "3"

services:

  # ------------------------------------------------------
  # traefik
  # ------------------------------------------------------

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      #- "--api.dashboard=true"
      #- "--api.debug=true"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.ldap-tcp.address=:1389/tcp"
      - "--entrypoints.ldap-udp.address=:1389/udp"
      - "--entrypoints.ldaps.address=:1636/tcp"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=dev+letsencrypt@medienhaus.dev"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      #- "--middlewares.www-redirect.redirectregex.regex=^https?://www\\.(.+)"
      #- "--middlewares.www-redirect.redirectregex.replacement=https://${1}"
      #- "--middlewares.www-redirect.redirectregex.permanent=true"
      ### use www-redirect:
      ### traefik.http.routers.<router_name>.middlewares: "www-redirect@file"
      ### and maybe needed:
      ### traefik.http.routers.<router_name>.rule=Host(`example.com`) || Host(`www.example.com`)"
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.api.entrypoints: "websecure"
    #  traefik.http.routers.api.tls.certresolver: "myresolver"
    #  traefik.http.routers.api.rule: "Host(`traefik.develop.medienhaus.dev`)"
    #  traefik.http.routers.api.service: "api@internal"
    #  #traefik.http.routers.api.middlewares: "auth"
    #  #traefik.http.middlewares.auth.basicauth.users: "medienhaus:$apr1$nnkZijJH$SY3UClGcBGKWE.LR3Tyxh1"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # ------------------------------------------------------
  # traefik-certs-dumper
  # ------------------------------------------------------

  #traefik-certs-dumper:
  #  image: ldez/traefik-certs-dumper:latest
  #  container_name: traefik-certs-dumper
  #  restart: unless-stopped
  #  depends_on:
  #    - traefik
  #  entrypoint: /bin/sh -c 'apk add jq; while ! [ -e /data/acme.json ] || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do sleep 1; done && traefik-certs-dumper file --version v2 --source /data/acme.json --watch --dest /dump --domain-subdir'
  #  volumes:
  #    - ./data/letsencrypt:/data:ro
  #    - ./data/traefik-certs-dumper:/dump

  # ------------------------------------------------------
  # postgres
  # ------------------------------------------------------

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      #- "POSTGRES_USER=postgres"
      #- "POSTGRES_PASSWORD=super_sudo"
      #- "POSTGRES_DB=postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "super_sudo"
      POSTGRES_DB: "postgres"
    #ports:
    #  - "5432:5432"
    volumes:
      #- ./postgres/data:/var/lib/postgresql/data
      - ./data/postgres:/var/lib/postgresql/data:rw

  # ------------------------------------------------------
  # redis
  # ------------------------------------------------------

  #redis:
  #  image: redis:latest
  #  container_name: redis
  #  restart: unless-stopped
  #  volumes:
  #    - ./data/redis:/data

  # ------------------------------------------------------
  # openldap--create-certificates
  # ------------------------------------------------------

  ## TODO !!
  #openldap--create-certificates:
  #  image: goacme/lego:latest
  #  container_name: openldap--create-certificates
  #  restart: unless-stopped
  #  depends_on:
  #    - traefik
  #  #command:
  #  #  "chown -R 1001:1001 /bitnami"
  #  #  'lego --email="dev+letsencrypt@medienhaus.dev" --domains="openldap.develop.medienhaus.dev" -http run --path /etc/lego'
  #  #labels:
  #  #  traefik.enable: "true"
  #  #  traefik.http.routers.openldap.entrypoints: "ldapsecure"
  #  #  traefik.http.routers.openldap.entrypoints: "websecure"
  #  #  traefik.http.routers.openldap.tls.certresolver: "myresolver"
  #  #  traefik.http.routers.openldap.rule: "Host(`openldap.develop.medienhaus.dev`)"
  #  volumes:
  #    - ./data/certificates/openldap:/etc/lego

  # ------------------------------------------------------
  # openldap--fix-permissions
  # ------------------------------------------------------

  openldap--fix-permissions:
    image: bitnami/openldap:latest
    container_name: openldap--fix-permissions
    restart: "no"
    #depends_on:
    #  - traefik-certs-dumper
    command: "chown -R 1001:1001 /bitnami"
    #command: "chown -R 1001:1001 /bitnami /opt/bitnami/openldap/etc/certs"
    #command: "chown -R 1001:1001 /bitnami /opt/bitnami/openldap/etc/certs /opt/bitnami/openldap/etc/letsencrypt/isrgrootx1.pem"
    #command: "chown -R 1001:1001 /bitnami /opt/bitnami/openldap/etc/certs /opt/bitnami/openldap/etc/letsencrypt/isrg-root-x1-cross-signed.pem"
    #command: "chown -R 1001:1001 /bitnami /opt/bitnami/openldap/etc/certs /opt/bitnami/openldap/etc/letsencrypt/lets-encrypt-r3.pem"
    user: "root"
    volumes:
      - ./data/openldap:/bitnami
      #- ./data/letsencrypt:/opt/bitnami/openldap/etc/letsencrypt
      #- ./data/traefik-certs-dumper/openldap.develop.medienhaus.dev:/opt/bitnami/openldap/etc/certs

  # ------------------------------------------------------
  # openldap
  # ------------------------------------------------------

  openldap:
    image: bitnami/openldap:latest
    container_name: openldap
    restart: unless-stopped
    depends_on:
      #- openldap--create-certificates
      - openldap--fix-permissions
      - traefik
    environment:
      BITNAMI_DEBUG: "true"
      LDAP_LOG_LEVEL: "9"
      LDAP_PORT_NUMBER: "1389"
      #LDAP_ROOT: "dc=example,dc=org"
      LDAP_ROOT: "dc=medienhaus,dc=dev"
      LDAP_ADMIN_USERNAME: "admin"
      #LDAP_ADMIN_PASSWORD: "adminpassword"
      LDAP_ADMIN_PASSWORD: "super_sudo"
      #LDAP_CONFIG_ADMIN_ENABLED: "no"
      #LDAP_CONFIG_ADMIN_USERNAME: "admin"
      #LDAP_CONFIG_ADMIN_PASSWORD: "configpassword"
      LDAP_USERS: "alice,bob,cyber,deus"
      LDAP_PASSWORDS: "foo,bar,baz,qux"
      LDAP_USER_DC: "users"
      LDAP_GROUP: "accounts"
      #LDAP_ADD_SCHEMAS: "no"
      #LDAP_EXTRA_SCHEMAS: "cosine, inetorgperson, nis"
      #LDAP_SKIP_DEFAULT_TREE: "no"
      #LDAP_CUSTOM_LDIF_DIR: "/ldifs"
      #LDAP_CUSTOM_SCHEMA_FILE: "/schema/custom.ldif"
      #LDAP_ULIMIT_NOFILES: "1024"
      #LDAP_ALLOW_ANON_BINDING: "yes"
      #LDAP_LOGLEVEL: "256"
      LDAP_ENABLE_TLS: "yes"
      LDAP_LDAPS_PORT_NUMBER: "1636"
      LDAP_TLS_CERT_FILE: "/opt/bitnami/openldap/etc/certs/certificate.crt"
      LDAP_TLS_KEY_FILE: "/opt/bitnami/openldap/etc/certs/privatekey.key"
      LDAP_TLS_CA_FILE: "/etc/ssl/certs/ca-certificates.crt"
      #LDAP_TLS_CA_FILE: "/opt/bitnami/openldap/etc/letsencrypt/lets-encrypt-r3.pem"
      #LDAP_TLS_CA_FILE: "/opt/bitnami/openldap/etc/letsencrypt/isrg-root-x1-cross-signed.pem"
      #LDAP_TLS_CA_FILE: "/opt/bitnami/openldap/etc/letsencrypt/isrgrootx1.pem"
      #LDAP_TLS_DH_PARAMS_FILE: ""
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.openldap.entrypoints=ldapsecure"
      #- "traefik.http.routers.openldap.tls.certresolver=myresolver"
      #- "traefik.http.routers.openldap.rule=Host(`openldap.develop.medienhaus.dev`)"
      #traefik.enable: "true"
      #traefik.http.routers.openldap.entrypoints: "ldapsecure"
      #traefik.http.routers.openldap.tls.certresolver: "myresolver"
      #traefik.http.routers.openldap.rule: "Host(`openldap.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.tcp.routers.ldap-tcp.rule: "HostSNI(`*`)"
      traefik.tcp.routers.ldap-tcp.entrypoints: "ldap-tcp"
      traefik.udp.routers.ldap-udp.entrypoints: "ldap-udp"
      traefik.tcp.routers.ldaps.rule: "HostSNI(`*`)"
      traefik.tcp.routers.ldaps.entrypoints: "ldaps"
      traefik.tcp.routers.ldaps.tls: "true"
      traefik.tcp.routers.ldaps.tls.passthrough: "true"
      traefik.tcp.routers.ldaps.tls.certresolver: "myresolver"
    ports:
      - "1389:1389"
      - "1636:1636"
    volumes:
      #- openldap_data:/bitnami/openldap
      - ./data/openldap:/bitnami/openldap
      #- ./data/letsencrypt:/opt/bitnami/openldap/etc/letsencrypt:ro
      - ./data/traefik-certs-dumper/openldap.develop.medienhaus.dev:/opt/bitnami/openldap/etc/certs:ro

  # ------------------------------------------------------
  # ldap-user-manager
  # ------------------------------------------------------

  #ldap-user-manager:
  #  image: wheelybird/ldap-user-manager:latest
  #  container_name: ldap-user-manager
  #  restart: unless-stopped
  #  depends_on:
  #    - openldap
  #    - traefik
  #  #env_file:
  #  #  - ./config/ldap-user-manager--.env
  #  environment:
  #    LDAP_URI: "ldaps://localhost"
  #    LDAP_BASE_DN: "dc=medienhaus,dc=dev"
  #    LDAP_ADMIN_BIND_DN: "cn=admin,dc=medienhaus,dc=dev"
  #    LDAP_ADMIN_BIND_PWD: "super_sudo"
  #    LDAP_ADMINS_GROUP: "admins"
  #
  #    SERVER_HOSTNAME: "ldap-user-manager.develop.medienhaus.dev"
  #    SERVER_PATH: "/"
  #    #SERVER_PORT: "80 & 443"
  #    #SERVER_PORT: "8389 & 8636"
  #    NO_HTTPS: "false"
  #    SERVER_KEY_FILENAME: "/opt/openldap/etc/certs/privatekey.key"
  #    SERVER_CERT_FILENAME: "/opt/openldap/etc/certs/certificate.crt"
  #    CA_CERT_FILENAME: "/etc/ssl/certs/ca-certificates.crt"
  #    #SESSION_TIMEOUT: "10 minutes"
  #
  #    ORGANISATION_NAME: "medienhaus/"
  #    SITE_NAME: "ldap_user_mgmt"
  #    SHOW_POSIX_ATTRIBUTES: "false"
  #
  #    LDAP_USER_OU: "users"
  #    LDAP_GROUP_OU: "accounts"
  #    LDAP_REQUIRE_STARTTLS: "true"
  #    LDAP_IGNORE_CERT_ERRORS: "false"
  #    LDAP_TLS_CACERT: "/etc/ssl/certs/ca-certificates.crt"
  #
  #    #LDAP_ACCOUNT_ATTRIBUTE: "uid"
  #    #LDAP_GROUP_MEMBERSHIP_ATTRIBUTE: "memberUID OR uniqueMember"
  #    #LDAP_ACCOUNT_ADDITIONAL_OBJECTCLASSES: ""
  #    #LDAP_ACCOUNT_ADDITIONAL_ATTRIBUTES: ""
  #    #LDAP_GROUP_MEMBERSHIP_USES_UID: "true OR false"
  #    #FORCE_RFC2307BIS: "false"
  #
  #    #DEFAULT_USER_GROUP: "everybody"
  #    #DEFAULT_USER_SHELL: "/bin/bash"
  #    EMAIL_DOMAIN: "medienhaus.dev"
  #    ENFORCE_SAFE_SYSTEM_NAMES: "true"
  #    #USERNAME_FORMAT: "{first_name}-{last_name}"
  #    #USERNAME_REGEX: "^[a-z][a-zA-Z0-9._-]{3,32}$"
  #    PASSWORD_HASH: "SHA512CRYPT"
  #    ACCEPT_WEAK_PASSWORDS: "false"
  #    REMOTE_HTTP_HEADERS_LOGIN: "false"
  #
  #    SMTP_HOSTNAME: "mueller.uberspace.de"
  #    SMTP_HOST_PORT: "587"
  #    SMTP_USERNAME: "develop@medienhaus.dev"
  #    SMTP_PASSWORD: "vYvYCdolbN69xO1F0yFWAimEFWdF1U7FpQmBs5cuvJKIQlyh6Vgu5hckIFDsxxp1"
  #    SMTP_USE_TLS: "false"
  #    SMTP_USE_SSL: "true"
  #    EMAIL_FROM_ADDRESS: "dev+ldap-user-manager@medienhaus.dev"
  #    EMAIL_FROM_NAME: "dev/ ldap_user_mgmt"
  #    #MAIL_SUBJECT: "Your medienhaus/ account has been created."
  #    #NEW_ACCOUNT_EMAIL_SUBJECT: ""
  #    #NEW_ACCOUNT_EMAIL_BODY: ""
  #    #RESET_PASSWORD_EMAIL_SUBJECT: ""
  #    #RESET_PASSWORD_EMAIL_BODY: ""
  #
  #    ACCOUNT_REQUESTS_ENABLED: "true"
  #    ACCOUNT_REQUESTS_EMAIL: "dev+ldap-user-request@medienhaus.dev"
  #
  #    LDAP_DEBUG: "true"
  #    LDAP_VERBOSE_CONNECTION_LOGS: "true"
  #    SESSION_DEBUG: "true"
  #    SMTP_LOG_LEVEL: "0"
  #  labels:
  #    #- "traefik.enable=true"
  #    #- "traefik.http.routers.ldap-user-manager.entrypoints=websecure"
  #    #- "traefik.http.routers.ldap-user-manager.tls.certresolver=myresolver"
  #    #- "traefik.http.routers.ldap-user-manager.rule=Host(`ldap-user-manager.develop.medienhaus.dev`)"
  #    traefik.enable: "true"
  #    traefik.http.routers.ldap-user-manager.entrypoints: "websecure"
  #    traefik.http.routers.ldap-user-manager.tls.certresolver: "myresolver"
  #    traefik.http.routers.ldap-user-manager.rule: "Host(`ldap-user-manager.develop.medienhaus.dev`)"
  #  ports:
  #    - "8389:80"
  #    - "8636:443"
  #    #- "8389:8389"
  #    #- "8636:8636"
  #  volumes:
  #    #- ./data/letsencrypt:/opt/bitnami/openldap/etc/letsencrypt:ro
  #    - ./data/traefik-certs-dumper/openldap.develop.medienhaus.dev:/opt/openldap/etc/certs:ro

  # ------------------------------------------------------
  # etherpad
  # ------------------------------------------------------

  etherpad:
    build:
      context: ./etherpad-lite
      args:
        ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_table_of_contents"
        #ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_mypads ep_table_of_contents"
    container_name: etherpad
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.etherpad.entrypoints=websecure"
      #- "traefik.http.routers.etherpad.tls.certresolver=myresolver"
      #- "traefik.http.routers.etherpad.rule=Host(`etherpad.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.http.routers.etherpad.entrypoints: "websecure"
      traefik.http.routers.etherpad.tls.certresolver: "myresolver"
      traefik.http.routers.etherpad.rule: "Host(`etherpad.develop.medienhaus.dev`)"
    #ports:
    #  - "9001:9001"

  # ------------------------------------------------------
  # rallly
  # ------------------------------------------------------

  rallly:
    #build: ./rallly
    build:
      context: ./rallly
      args:
        - "DATABASE_URL=postgres://rallly_user:super_sudo@postgres:5432/rallly?pgbouncer=true"
    container_name: rallly
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
    command: /bin/sh -c "yarn prisma migrate deploy && yarn start"
    #env_file:
    #  - ./config/rallly--.env
    environment:
      #- "DATABASE_URL=postgres://rallly_user:super_sudo@postgres:5432/rallly"
      DATABASE_URL: "postgres://rallly_user:super_sudo@postgres:5432/rallly"
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.rallly.entrypoints=websecure"
      #- "traefik.http.routers.rallly.tls.certresolver=myresolver"
      #- "traefik.http.routers.rallly.rule=Host(`rallly.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.http.routers.rallly.entrypoints: "websecure"
      traefik.http.routers.rallly.tls.certresolver: "myresolver"
      traefik.http.routers.rallly.rule: "Host(`rallly.develop.medienhaus.dev`)"
    #ports:
    #  - "3000:3000"

  # ------------------------------------------------------
  # spacedeck
  # ------------------------------------------------------

  spacedeck:
    build: ./spacedeck-open
    container_name: spacedeck
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.spacedeck.entrypoints=websecure"
      #- "traefik.http.routers.spacedeck.tls.certresolver=myresolver"
      #- "traefik.http.routers.spacedeck.rule=Host(`spacedeck.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.http.routers.spacedeck.entrypoints: "websecure"
      traefik.http.routers.spacedeck.tls.certresolver: "myresolver"
      traefik.http.routers.spacedeck.rule: "Host(`spacedeck.develop.medienhaus.dev`)"
    #ports:
    #  - "9666:9666"
    volumes:
      - ./spacedeck-open/config:/app/config
      - ./spacedeck-open/storage:/app/storage
      - ./spacedeck-open/database:/app/database

# ------------------------------------------------------
# networks
# ------------------------------------------------------

networks:
  default:
    driver: bridge

# ------------------------------------------------------
# volumes
# ------------------------------------------------------

#volumes:
#  openldap_data:
#    driver: local
