#version: "3"

services:

  # ------------------------------------------------------
  # traefik
  # ------------------------------------------------------

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      #- "--api.dashboard=true"
      #- "--api.debug=true"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      #- "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      #- "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      #- "--entrypoints.websecure.address=:443"
      - "--entrypoints.ldap-tcp.address=:1389/tcp"
      - "--entrypoints.ldap-udp.address=:1389/udp"
      #- "--entrypoints.ldaps.address=:1636/tcp"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=dev+letsencrypt@medienhaus.dev"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      #- "--middlewares.www-redirect.redirectregex.regex=^https?://www\\.(.+)"
      #- "--middlewares.www-redirect.redirectregex.replacement=https://${1}"
      #- "--middlewares.www-redirect.redirectregex.permanent=true"
    #labels:
    #  traefik.enable: "true"
    #  traefik.http.routers.api.entrypoints: "websecure"
    #  traefik.http.routers.api.tls.certresolver: "myresolver"
    #  traefik.http.routers.api.rule: "Host(`traefik.develop.medienhaus.dev`)"
    #  traefik.http.routers.api.service: "api@internal"
    #  #traefik.http.routers.api.middlewares: "auth"
    #  #traefik.http.middlewares.auth.basicauth.users: "medienhaus:$apr1$nnkZijJH$SY3UClGcBGKWE.LR3Tyxh1"
    #  #traefik.http.routers.<router_name>.middlewares: "www-redirect@file"
    #  #traefik.http.routers.<router_name>.rule: "Host(`example.com`) || Host(`www.example.com`)"
    ports:
      - "80:80"
      #- "443:443"
    volumes:
      - ./data/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # ------------------------------------------------------
  # postgres
  # ------------------------------------------------------

  #postgres:
  #  image: postgres:latest
  #  container_name: postgres
  #  restart: unless-stopped
  #  environment:
  #    POSTGRES_DB: "postgres"
  #    POSTGRES_USER: "postgres"
  #    POSTGRES_PASSWORD: "super_sudo"
  #  #ports:
  #  #  - "5432:5432"
  #  volumes:
  #    - ./data/postgres:/var/lib/postgresql/data:rw

  # ------------------------------------------------------
  # redis
  # ------------------------------------------------------

  #redis:
  #  image: redis:latest
  #  container_name: redis
  #  restart: unless-stopped
  #  volumes:
  #    - ./data/redis:/data

  # ------------------------------------------------------
  # openldap
  # ------------------------------------------------------

  ## TODO !!
  #traefik-certs-dumper:
  #  image: ldez/traefik-certs-dumper:latest
  #  container_name: traefik-certs-dumper
  #  restart: unless-stopped
  #  depends_on:
  #    - traefik
  #  entrypoint: /bin/sh -c 'apk add jq; while ! [ -e /data/acme.json ] || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do sleep 1; done && traefik-certs-dumper file --version v2 --source /data/acme.json --watch --dest /dump --domain-subdir'
  #  volumes:
  #    - ./data/letsencrypt:/data:ro
  #    - ./data/traefik-certs-dumper:/dump

  ## TODO !!
  #openldap--create-certificates:
  #  image: goacme/lego:latest
  #  container_name: openldap--create-certificates
  #  restart: unless-stopped
  #  depends_on:
  #    - traefik
  #  #command:
  #  #  "chown -R 1001:1001 /bitnami"
  #  #  'lego --email="dev+letsencrypt@medienhaus.dev" --domains="openldap.develop.medienhaus.dev" -http run --path /etc/lego'
  #  #labels:
  #  #  traefik.enable: "true"
  #  #  traefik.http.routers.openldap.entrypoints: "ldapsecure"
  #  #  traefik.http.routers.openldap.entrypoints: "websecure"
  #  #  traefik.http.routers.openldap.tls.certresolver: "myresolver"
  #  #  traefik.http.routers.openldap.rule: "Host(`openldap.develop.medienhaus.dev`)"
  #  volumes:
  #    - ./data/certificates/openldap:/etc/lego

  ## TODO !!
  #openldap--fix-permissions:
  #  image: bitnami/openldap:latest
  #  container_name: openldap--fix-permissions
  #  restart: "no"
  #  #depends_on:
  #  #  - traefik-certs-dumper
  #  command: "chown -R 1001:1001 /bitnami"
  #  #command: "chown -R 1001:1001 /bitnami /opt/bitnami/openldap/etc/certs"
  #  #command: "chown -R 1001:1001 /bitnami /opt/bitnami/openldap/etc/certs /opt/bitnami/openldap/etc/letsencrypt/isrgrootx1.pem"
  #  #command: "chown -R 1001:1001 /bitnami /opt/bitnami/openldap/etc/certs /opt/bitnami/openldap/etc/letsencrypt/isrg-root-x1-cross-signed.pem"
  #  #command: "chown -R 1001:1001 /bitnami /opt/bitnami/openldap/etc/certs /opt/bitnami/openldap/etc/letsencrypt/lets-encrypt-r3.pem"
  #  user: "root"
  #  volumes:
  #    - ./data/openldap:/bitnami
  #    #- ./data/letsencrypt:/opt/bitnami/openldap/etc/letsencrypt
  #    #- ./data/traefik-certs-dumper/openldap.develop.medienhaus.dev:/opt/bitnami/openldap/etc/certs

  ## TODO !!
  #openldap:
  #  image: bitnami/openldap:latest
  #  container_name: openldap
  #  restart: unless-stopped
  #  depends_on:
  #    #- openldap--create-certificates
  #    - openldap--fix-permissions
  #    - traefik
  #  environment:
  #    BITNAMI_DEBUG: "true"
  #    LDAP_LOG_LEVEL: "9"
  #    LDAP_PORT_NUMBER: "1389"
  #    #LDAP_ROOT: "dc=example,dc=org"
  #    LDAP_ROOT: "dc=medienhaus,dc=dev"
  #    LDAP_ADMIN_USERNAME: "admin"
  #    #LDAP_ADMIN_PASSWORD: "adminpassword"
  #    LDAP_ADMIN_PASSWORD: "super_sudo"
  #    #LDAP_CONFIG_ADMIN_ENABLED: "no"
  #    #LDAP_CONFIG_ADMIN_USERNAME: "admin"
  #    #LDAP_CONFIG_ADMIN_PASSWORD: "configpassword"
  #    LDAP_USERS: "alice,bob,cyber,deus"
  #    LDAP_PASSWORDS: "foo,bar,baz,qux"
  #    LDAP_USER_DC: "users"
  #    LDAP_GROUP: "accounts"
  #    #LDAP_ADD_SCHEMAS: "no"
  #    #LDAP_EXTRA_SCHEMAS: "cosine, inetorgperson, nis"
  #    #LDAP_SKIP_DEFAULT_TREE: "no"
  #    #LDAP_CUSTOM_LDIF_DIR: "/ldifs"
  #    #LDAP_CUSTOM_SCHEMA_FILE: "/schema/custom.ldif"
  #    #LDAP_ULIMIT_NOFILES: "1024"
  #    #LDAP_ALLOW_ANON_BINDING: "yes"
  #    #LDAP_LOGLEVEL: "256"
  #    LDAP_ENABLE_TLS: "yes"
  #    LDAP_LDAPS_PORT_NUMBER: "1636"
  #    LDAP_TLS_CERT_FILE: "/opt/bitnami/openldap/etc/certs/certificate.crt"
  #    LDAP_TLS_KEY_FILE: "/opt/bitnami/openldap/etc/certs/privatekey.key"
  #    LDAP_TLS_CA_FILE: "/etc/ssl/certs/ca-certificates.crt"
  #    #LDAP_TLS_CA_FILE: "/opt/bitnami/openldap/etc/letsencrypt/lets-encrypt-r3.pem"
  #    #LDAP_TLS_CA_FILE: "/opt/bitnami/openldap/etc/letsencrypt/isrg-root-x1-cross-signed.pem"
  #    #LDAP_TLS_CA_FILE: "/opt/bitnami/openldap/etc/letsencrypt/isrgrootx1.pem"
  #    #LDAP_TLS_DH_PARAMS_FILE: ""
  #  labels:
  #    #traefik.enable: "true"
  #    #traefik.http.routers.openldap.entrypoints: "ldapsecure"
  #    #traefik.http.routers.openldap.tls.certresolver: "myresolver"
  #    #traefik.http.routers.openldap.rule: "Host(`openldap.develop.medienhaus.dev`)"
  #    traefik.enable: "true"
  #    traefik.tcp.routers.ldap-tcp.rule: "HostSNI(`*`)"
  #    traefik.tcp.routers.ldap-tcp.entrypoints: "ldap-tcp"
  #    traefik.udp.routers.ldap-udp.entrypoints: "ldap-udp"
  #    traefik.tcp.routers.ldaps.rule: "HostSNI(`*`)"
  #    traefik.tcp.routers.ldaps.entrypoints: "ldaps"
  #    traefik.tcp.routers.ldaps.tls: "true"
  #    traefik.tcp.routers.ldaps.tls.passthrough: "true"
  #    traefik.tcp.routers.ldaps.tls.certresolver: "myresolver"
  #  ports:
  #    - "1389:1389"
  #    - "1636:1636"
  #  volumes:
  #    #- openldap_data:/bitnami/openldap
  #    - ./data/openldap:/bitnami/openldap
  #    #- ./data/letsencrypt:/opt/bitnami/openldap/etc/letsencrypt:ro
  #    - ./data/traefik-certs-dumper/openldap.develop.medienhaus.dev:/opt/bitnami/openldap/etc/certs:ro

  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    restart: unless-stopped
    depends_on:
      - traefik
    environment:
      LDAP_ORGANISATION: "medienhaus/"
      LDAP_DOMAIN: "medienhaus.dev"
      LDAP_BASE_DN: "dc=medienhaus,dc=dev"
      #LDAP_ADMIN_PASSWORD: "admin"
      LDAP_ADMIN_PASSWORD: "super_sudo"
      #LDAP_CONFIG_PASSWORD: "config"
      LDAP_CONFIG_PASSWORD: "super_sudo"
      #LDAP_READONLY_USER: "false"
      #LDAP_READONLY_USER_USERNAME: "readonly"
      #LDAP_READONLY_USER_PASSWORD: "readonly"
      #LDAP_RFC2307BIS_SCHEMA: "false"
      #LDAP_BACKEND: "mdb"
      #LDAP_TLS: "true"
      LDAP_TLS: "false"
      #LDAP_TLS_CRT_FILENAME: "ldap.crt"
      #LDAP_TLS_KEY_FILENAME: "ldap.key"
      #LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      #LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      #LDAP_TLS_ENFORCE: "false"
      #LDAP_TLS_CIPHER_SUITE: "SECURE256:+SECURE128:-VERS-TLS-ALL:+VERS-TLS1.2:-RSA:-DHE-DSS:-CAMELLIA-128-CBC:-CAMELLIA-256-CBC"
      #LDAP_TLS_VERIFY_CLIENT: "demand"
      #LDAP_REPLICATION: "false"
      #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn=\"cn=admin,cn=config\" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase=\"cn=config\" type=refreshAndPersist retry=\"60 +\" timeout=1 starttls=critical"
      #LDAP_REPLICATION_DB_SYNCPROV: "binddn=\"cn=admin,$LDAP_BASE_DN\" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase=\"$LDAP_BASE_DN\" type=refreshAndPersist interval=00:00:00:10 retry=\"60 +\" timeout=1 starttls=critical"
      #LDAP_REPLICATION_HOSTS:
      #  - ldap://ldap.example.org
      #  - ldap://ldap2.example.org
      #KEEP_EXISTING_CONFIG: "false"
      #LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      #LDAP_SSL_HELPER_PREFIX: "true"
      #HOSTNAME: # defaults to whatever docker creates
      #DISABLE_CHOWN: "false"
      #LDAP_OPENLDAP_UID: # runtime docker user uid to run container as
      #LDAP_OPENLDAP_GID: # runtime docker user gid to run container as
    labels:
      traefik.enable: "true"
      traefik.tcp.routers.ldap-tcp.rule: "HostSNI(`*`)"
      traefik.tcp.routers.ldap-tcp.entrypoints: "ldap-tcp"
      traefik.udp.routers.ldap-udp.entrypoints: "ldap-udp"
      #traefik.tcp.routers.ldaps.rule: "HostSNI(`*`)"
      #traefik.tcp.routers.ldaps.entrypoints: "ldaps"
      #traefik.tcp.routers.ldaps.tls: "true"
      #traefik.tcp.routers.ldaps.tls.passthrough: "true"
      #traefik.tcp.routers.ldaps.tls.certresolver: "myresolver"
    #ports:
    #  - "1389:389"
    #  - "1636:636"
    volumes:
      - ./data/openldap/ldap:/var/lib/ldap
      - ./data/openldap/slapd:/etc/ldap/slapd.d

  ldap-user-manager:
    image: wheelybird/ldap-user-manager:latest
    container_name: ldap-user-manager
    restart: unless-stopped
    depends_on:
      - openldap
      - traefik
    #env_file:
    #  - ./config/ldap-user-manager--.env
    environment:
      LDAP_URI: "ldap://openldap:389"
      #LDAP_URI: "ldaps://openldap:1636"
      #LDAP_URI: "ldap://openldap.develop.medienhaus.dev:1389"
      #LDAP_URI: "ldaps://openldap.develop.medienhaus.dev:1636"
      LDAP_BASE_DN: "dc=medienhaus,dc=dev"
      LDAP_ADMIN_BIND_DN: "cn=admin,dc=medienhaus,dc=dev"
      LDAP_ADMIN_BIND_PWD: "super_sudo"
      LDAP_ADMINS_GROUP: "admins"
      SERVER_HOSTNAME: "openldap.localhost"
      #SERVER_PATH: "/"
      #SERVER_PORT: "80 & 443"
      #SERVER_PORT: "8389 & 8636"
      #NO_HTTPS: "false"
      NO_HTTPS: "true"
      #
      #SERVER_KEY_FILENAME: "privatekey.key"
      #SERVER_CERT_FILENAME: "certificate.crt"
      #CA_CERT_FILENAME: ".ca.crt"
      #
      #SESSION_TIMEOUT: "10 minutes"
      ORGANISATION_NAME: "medienhaus/"
      SITE_NAME: "ldap_user_manager"
      SHOW_POSIX_ATTRIBUTES: "false"
      LDAP_USER_OU: "users"
      LDAP_GROUP_OU: "groups"
      #LDAP_REQUIRE_STARTTLS: "true"
      LDAP_REQUIRE_STARTTLS: "false"
      LDAP_IGNORE_CERT_ERRORS: "false"
      #LDAP_TLS_CACERT: ""
      #LDAP_TLS_CACERT: "$(</etc/ssl/certs/ca-certificates.crt)"
      #LDAP_TLS_CACERT_FILE: ""
      #LDAP_TLS_CACERT_FILE: "/etc/ssl/certs/ca-certificates.crt"
      LDAP_ACCOUNT_ATTRIBUTE: "uid"
      #LDAP_ACCOUNT_ATTRIBUTE: "cn"
      #LDAP_GROUP_MEMBERSHIP_ATTRIBUTE: "memberUID or uniqueMember"
      #LDAP_ACCOUNT_ADDITIONAL_OBJECTCLASSES: ""
      #LDAP_ACCOUNT_ADDITIONAL_ATTRIBUTES: ""
      #
      #LDAP_ACCOUNT_ADDITIONAL_ATTRIBUTES: "cn"
      #
      #LDAP_GROUP_MEMBERSHIP_USES_UID: "true OR false"
      #FORCE_RFC2307BIS: "false"
      #DEFAULT_USER_GROUP: "everybody"
      #DEFAULT_USER_SHELL: "/bin/bash"
      #
      #EMAIL_DOMAIN: "medienhaus.dev"
      #ENFORCE_SAFE_SYSTEM_NAMES: "true"
      ##USERNAME_FORMAT: "{first_name}-{last_name}"
      ##USERNAME_REGEX: "^[a-z][a-zA-Z0-9._-]{3,32}$"
      #PASSWORD_HASH: "SHA512CRYPT"
      #ACCEPT_WEAK_PASSWORDS: "false"
      #REMOTE_HTTP_HEADERS_LOGIN: "false"
      #SMTP_HOSTNAME: "mueller.uberspace.de"
      #SMTP_HOST_PORT: "587"
      #SMTP_USERNAME: "develop@medienhaus.dev"
      #SMTP_PASSWORD: "vYvYCdolbN69xO1F0yFWAimEFWdF1U7FpQmBs5cuvJKIQlyh6Vgu5hckIFDsxxp1"
      #SMTP_USE_TLS: "true"
      #SMTP_USE_SSL: "false"
      #EMAIL_FROM_ADDRESS: "dev+ldap-user-manager@medienhaus.dev"
      #EMAIL_FROM_NAME: "dev/ ldap_user_manager"
      ##MAIL_SUBJECT: "Your medienhaus/ account has been created."
      ##NEW_ACCOUNT_EMAIL_SUBJECT: ""
      ##NEW_ACCOUNT_EMAIL_BODY: ""
      ##RESET_PASSWORD_EMAIL_SUBJECT: ""
      ##RESET_PASSWORD_EMAIL_BODY: ""
      #ACCOUNT_REQUESTS_ENABLED: "true"
      #ACCOUNT_REQUESTS_EMAIL: "dev+ldap-user-request@medienhaus.dev"
      #LDAP_DEBUG: "false"
      #LDAP_VERBOSE_CONNECTION_LOGS: "false"
      #SESSION_DEBUG: "false"
      #SMTP_LOG_LEVEL: "0"
    labels:
      traefik.enable: "true"
      # development
      traefik.http.routers.ldap-user-manager.entrypoints: "web"
      traefik.http.routers.ldap-user-manager.rule: "Host(`openldap.localhost`)"
      # production
      #traefik.http.routers.ldap-user-manager.entrypoints: "websecure"
      #traefik.http.routers.ldap-user-manager.tls.certresolver: "myresolver"
      #traefik.http.routers.ldap-user-manager.rule: "Host(`openldap.develop.medienhaus.dev`)"
    #ports:
    #  - "8389:80"
    #  - "8636:443"
    #  #- "8389:8389"
    #  #- "8636:8636"
    volumes:
      #- ./data/letsencrypt:/opt/bitnami/openldap/etc/letsencrypt:ro
      #- ./data/traefik-certs-dumper/openldap.develop.medienhaus.dev:/opt/ssl
      - ./data/ldap-user-manager:/etc/ldap

  # ------------------------------------------------------
  # etherpad
  # ------------------------------------------------------

  postgres-etherpad:
    image: postgres:latest
    container_name: postgres-etherpad
    restart: unless-stopped
    environment:
      POSTGRES_DB: "etherpad"
      POSTGRES_USER: "etherpad"
      POSTGRES_PASSWORD: "super_sudo"
    #ports:
    #  - "5432:5432"
    volumes:
      - ./data/etherpad:/var/lib/postgresql/data:rw

  etherpad:
    #image: etherpad:latest
    build:
      context: ./etherpad-lite
      args:
        ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_table_of_contents"
        #ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_mypads ep_table_of_contents"
    container_name: etherpad
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres-etherpad
    #environment:
    #  TITLE: "medienhaus/write"
    #  FAVICON: "/src/static/skins/medienhaus/img/favicon.svg"
    #  SKIN_NAME: "medienhaus"
    #  IP: "0.0.0.0"
    #  PORT: "9001"
    #  DB_TYPE: "postgres"
    #  DB_HOST: "postgres-etherpad"
    #  DB_PORT: "5432"
    #  DB_NAME: "etherpad"
    #  DB_USER: "etherpad"
    #  DB_PASS: "super_sudo"
    #  DEFAULT_PAD_TEXT: ""
    #  PAD_OPTIONS_NO_COLORS: "true"
    #  PAD_OPTIONS_SHOW_CONTROLS: "true"
    #  PAD_OPTIONS_SHOW_CHAT: "false"
    #  PAD_OPTIONS_SHOW_LINE_NUMBERS: "true"
    #  PAD_OPTIONS_USE_MONOSPACE_FONT: "true"
    #  PAD_OPTIONS_USER_NAME: "false"
    #  PAD_OPTIONS_USER_COLOR: "false"
    #  PAD_OPTIONS_RTL: "false"
    #  PAD_OPTIONS_ALWAYS_SHOW_CHAT: "false"
    #  PAD_OPTIONS_CHAT_AND_USERS: "false"
    #  PAD_OPTIONS_LANG: "en-us"
    #  ADMIN_PASSWORD: "be25d534df3571b56bd47a83d55b5c4b3b4a536d"
    #  SOCKETIO_MAX_HTTP_BUFFER_SIZE: "10000"
    labels:
      traefik.enable: "true"
      # development
      traefik.http.routers.etherpad.entrypoints: "web"
      traefik.http.routers.etherpad.rule: "Host(`write.localhost`)"
      # production
      #traefik.http.routers.etherpad.entrypoints: "websecure"
      #traefik.http.routers.etherpad.tls.certresolver: "myresolver"
      #traefik.http.routers.etherpad.rule: "Host(`etherpad.develop.medienhaus.dev`)"
    #ports:
    #  - "9001:9001"
    volumes:
      - ./config/etherpad.json:/opt/etherpad-lite/settings.json
      - ./etherpad-skin-medienhaus:/opt/etherpad-lite/src/static/skins/medienhaus

  # ------------------------------------------------------
  # rallly
  # ------------------------------------------------------

  ## TODO !!
  #postgres-rallly:
  #  image: postgres:latest
  #  container_name: postgres-rallly
  #  restart: unless-stopped
  #  environment:
  #    POSTGRES_DB: "rallly"
  #    POSTGRES_USER: "rallly"
  #    POSTGRES_PASSWORD: "super_sudo"
  #  #ports:
  #  #  - "5432:5432"
  #  volumes:
  #    - ./data/rallly:/var/lib/postgresql/data:rw

  ## TODO !!
  #rallly:
  #  build:
  #    context: ./rallly
  #    args:
  #      #- "DATABASE_URL=postgres://rallly:super_sudo@postgres-rallly:5432/rallly?pgbouncer=true"
  #      DATABASE_URL: "postgres://rallly:super_sudo@postgres-rallly:5432/rallly?pgbouncer=true"
  #  container_name: rallly
  #  restart: unless-stopped
  #  depends_on:
  #    - traefik
  #    - postgres-rallly
  #  command: /bin/sh -c "yarn prisma migrate deploy && yarn start"
  #  #env_file:
  #  #  - ./config/rallly--.env
  #  environment:
  #    #- "DATABASE_URL=postgres://rallly:super_sudo@postgres-rallly:5432/rallly"
  #    DATABASE_URL: "postgres://rallly:super_sudo@postgres-rallly:5432/rallly"
  #  labels:
  #    traefik.enable: "true"
  #    # development
  #    traefik.http.routers.rallly.entrypoints: "web"
  #    traefik.http.routers.rallly.rule: "Host(`poll.localhost`)"
  #    # production
  #    #traefik.http.routers.rallly.entrypoints: "websecure"
  #    #traefik.http.routers.rallly.tls.certresolver: "myresolver"
  #    #traefik.http.routers.rallly.rule: "Host(`poll.develop.medienhaus.dev`)"
  #  #ports:
  #  #  - "3000:3000"

  # ------------------------------------------------------
  # spacedeck
  # ------------------------------------------------------

  postgres-spacedeck:
    image: postgres:latest
    container_name: postgres-spacedeck
    restart: unless-stopped
    environment:
      POSTGRES_DB: "spacedeck"
      POSTGRES_USER: "spacedeck"
      POSTGRES_PASSWORD: "super_sudo"
    #ports:
    #  - "5432:5432"
    volumes:
      - ./data/spacedeck:/var/lib/postgresql/data:rw

  spacedeck:
    build: ./spacedeck-open
    container_name: spacedeck
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres-spacedeck
    labels:
      traefik.enable: "true"
      # development
      traefik.http.routers.spacedeck.entrypoints: "web"
      traefik.http.routers.spacedeck.rule: "Host(`sketch.localhost`)"
      # production
      #traefik.http.routers.spacedeck.entrypoints: "websecure"
      #traefik.http.routers.spacedeck.tls.certresolver: "myresolver"
      #traefik.http.routers.spacedeck.rule: "Host(`spacedeck.develop.medienhaus.dev`)"
    #ports:
    #  - "9666:9666"
    volumes:
      - ./config/spacedeck.json:/app/config/default.json
      - ./storage/spacedeck:/app/storage
      - ./data/spacedeck:/app/database

  # ------------------------------------------------------
  # matrix-synapse # production only because domain name ?
  # ------------------------------------------------------

  #postgres-matrix-synapse:
  #  image: postgres:latest
  #  container_name: postgres-matrix-synapse
  #  restart: unless-stopped
  #  environment:
  #    POSTGRES_DB: "synapse"
  #    POSTGRES_USER: "synapse"
  #    POSTGRES_PASSWORD: "super_sudo"
  #  #ports:
  #  #  - "5432:5432"
  #  volumes:
  #    - ./data/matrix-synapse:/var/lib/postgresql/data:rw

  #nginx-matrix-synapse:
  #  image: nginx:latest
  #  container_name: nginx-matrix-synapse
  #  restart: unless-stopped
  #  labels:
  #    traefik.enable: "true"
  #    # development
  #    traefik.http.routers.nginx-matrix-synapse.entrypoints: "web"
  #    traefik.http.routers.nginx-matrix-synapse.rule: "Host(`matrix.localhost`)"
  #    # production
  #    #traefik.http.routers.nginx-matrix-synapse.entrypoints: "websecure"
  #    #traefik.http.routers.nginx-matrix-synapse.tls.certresolver: "myresolver"
  #    #traefik.http.routers.nginx-matrix-synapse.rule: "Host(`matrix.moci.space`)"
  #  #ports:
  #  #  - "80:80"
  #  #  - "443:443"
  #  #  - "8008:8008"
  #  #  - "8443:8443"
  #  volumes:
  #    - ./config/nginx-matrix-synapse.conf:/etc/nginx/conf.d/default.conf:ro

  #matrix-synapse:
  #  image: matrixdotorg/synapse:latest
  #  container_name: matrix-synapse
  #  restart: unless-stopped
  #  depends_on:
  #    - nginx-matrix-synapse
  #    - postgres-matrix-synapse
  #  environment:
  #    - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
  #  volumes:
  #    - ./config/matrix-synapse.yaml:/data/homeserver.yaml
  #    - ./data/synapse/data

  # ------------------------------------------------------
  # medienhaus-spaces
  # ------------------------------------------------------

  element-medienhaus-spaces:
    image: vectorim/element-web:latest
    container_name: element-medienhaus-spaces
    depends_on:
      - traefik
      - medienhaus-spaces
    labels:
      traefik.enable: "true"
      # development
      traefik.http.routers.element-medienhaus-spaces.entrypoints: "web"
      traefik.http.routers.element-medienhaus-spaces.rule: "Host(`localhost`) && PathPrefix(`/element/`)"
      # production
      #traefik.http.routers.element-medienhaus-spaces.entrypoints: "websecure"
      #traefik.http.routers.element-medienhaus-spaces.tls.certresolver: "myresolver"
      #traefik.http.routers.element-medienhaus-spaces.rule: "Host(`spaces.develop.medienhaus.dev`) && PathPrefix(`/element/`)"
      traefik.http.routers.element-medienhaus-spaces.middlewares: "element-medienhaus-spaces@docker"
      traefik.http.middlewares.element-medienhaus-spaces.stripprefix.prefixes: "/element"
    volumes:
      - ./config/element.json:/app/config.json

  ## TODO !! in case we want to serve the built application via nginx
  #nginx-medienhaus-spaces:
  #  image: nginx:latest
  #  container_name: nginx-medienhaus-spaces
  #  restart: unless-stopped
  #  labels:
  #    - ...
  #  #ports:
  #  #  - "80:80"
  #  #  - "443:443"
  #  volumes:
  #    - ./config/nginx-medienhaus-spaces.conf:/etc/nginx/conf.d/default.conf:ro

  medienhaus-spaces:
    build: ./medienhaus-spaces-multi-auth
    container_name: medienhaus-spaces
    restart: unless-stopped
    depends_on:
      - traefik
      #- element-medienhaus-spaces
      #- nginx-medienhaus-spaces
    command: dev
    labels:
      traefik.enable: "true"
      # development
      traefik.http.routers.medienhaus-spaces.entrypoints: "web"
      traefik.http.routers.medienhaus-spaces.rule: "Host(`localhost`)"
      # production
      #traefik.http.routers.medienhaus-spaces.entrypoints: "websecure"
      #traefik.http.routers.medienhaus-spaces.tls.certresolver: "myresolver"
      #traefik.http.routers.medienhaus-spaces.rule: "Host(`spaces.develop.medienhaus.dev`)"
    #ports:
    #  - "3000:3000"
    volumes:
      - ./config/medienhaus-spaces.config.js:/usr/src/app/next.config.js
      - ./medienhaus-spaces-multi-auth:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next

# ------------------------------------------------------
# networks
# ------------------------------------------------------

networks:
  default:
    driver: bridge

# ------------------------------------------------------
# volumes
# ------------------------------------------------------

#volumes:
#  openldap_data:
#    driver: local
