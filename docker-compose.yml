#version: "3"

services:

  # ------------------------------------------------------
  # traefik
  # ------------------------------------------------------

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.ldap-tcp.address=:1389/tcp"
      - "--entrypoints.ldap-udp.address=:1389/udp"
      - "--entrypoints.ldaps.address=:1636/tcp"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=dev+letsencrypt@medienhaus.dev"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      traefik.enable: "true"
      traefik.http.routers.api.entrypoints: "websecure"
      traefik.http.routers.api.tls.certresolver: "myresolver"
      traefik.http.routers.api.rule: "Host(`traefik.develop.medienhaus.dev`)"
      traefik.http.routers.api.service: "api@internal"
      #traefik.http.routers.api.middlewares: "auth"
      #traefik.http.middlewares.auth.basicauth.users: "medienhaus:$apr1$nnkZijJH$SY3UClGcBGKWE.LR3Tyxh1"
    ports:
      - "80:80"      # http
      - "443:443"    # https
      - "1389:1389"  # ldap
      - "1636:1636"  # ldaps
    volumes:
      - ./data/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # ------------------------------------------------------
  # traefik-certs-dumper
  # ------------------------------------------------------

  traefik-certs-dumper:
    image: ldez/traefik-certs-dumper:latest
    container_name: traefik-certs-dumper
    restart: unless-stopped
    entrypoint: /bin/sh -c 'apk add jq; while ! [ -e /data/acme.json ] || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do sleep 1; done && traefik-certs-dumper file --version v2 --source /data/acme.json --watch --dest /dump --domain-subdir'
    volumes:
      - ./data/letsencrypt:/data:ro
      - ./data/traefik-certs-dumper:/dump

  # ------------------------------------------------------
  # postgres
  # ------------------------------------------------------

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      #- "POSTGRES_USER=postgres"
      #- "POSTGRES_PASSWORD=super_sudo"
      #- "POSTGRES_DB=postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "super_sudo"
      POSTGRES_DB: "postgres"
    #ports:
    #  - "5432:5432"
    volumes:
      #- ./postgres/data:/var/lib/postgresql/data
      - ./data/postgres:/var/lib/postgresql/data:rw

  # ------------------------------------------------------
  # redis
  # ------------------------------------------------------

  #redis:
  #  image: redis:latest
  #  container_name: redis
  #  restart: unless-stopped
  #  volumes:
  #    - ./data/redis:/data

  # ------------------------------------------------------
  # openldap--fix-permissions
  # ------------------------------------------------------

  openldap--fix-permissions:
    image: bitnami/openldap:latest
    container_name: openldap--fix-permissions
    restart: "no"
    command: "chown -R 1001:1001 /bitnami"
    user: "root"
    volumes:
      - ./data/openldap:/bitnami

  # ------------------------------------------------------
  # openldap
  # ------------------------------------------------------

  openldap:
    image: bitnami/openldap:latest
    container_name: openldap
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
    environment:
      BITNAMI_DEBUG: "true"
      LDAP_PORT_NUMBER: "1389"
      #LDAP_ROOT: "dc=example,dc=org"
      LDAP_ROOT: "dc=medienhaus,dc=dev"
      #LDAP_ADMIN_USERNAME: "admin"
      LDAP_ADMIN_USERNAME: "medienhaus"
      #LDAP_ADMIN_PASSWORD: "adminpassword"
      LDAP_ADMIN_PASSWORD: "super_sudo"
      #LDAP_CONFIG_ADMIN_ENABLED: "no"
      #LDAP_CONFIG_ADMIN_USERNAME: "admin"
      #LDAP_CONFIG_ADMIN_PASSWORD: "configpassword"
      #LDAP_USERS: "user01,user02"
      LDAP_USERS: "alice,bob,cyber,deus"
      #LDAP_PASSWORDS: "bitnami1,bitnami2"
      LDAP_PASSWORDS: "foo,bar,baz,qux"
      #LDAP_USER_DC: "users"
      LDAP_USER_DC: "accounts"
      #LDAP_GROUP: "readers"
      LDAP_GROUP: "read-only"
      #LDAP_ADD_SCHEMAS: "no"
      #LDAP_EXTRA_SCHEMAS: "cosine, inetorgperson, nis"
      #LDAP_SKIP_DEFAULT_TREE: "no"
      #LDAP_CUSTOM_LDIF_DIR: "/ldifs"
      #LDAP_CUSTOM_SCHEMA_FILE: "/schema/custom.ldif"
      #LDAP_ULIMIT_NOFILES: "1024"
      #LDAP_ALLOW_ANON_BINDING: "yes"
      #LDAP_LOGLEVEL: "256"
      #LDAP_ENABLE_TLS: "no"
      LDAP_ENABLE_TLS: "yes"
      LDAP_LDAPS_PORT_NUMBER: "1636"
      LDAP_TLS_CERT_FILE: "/etc/letsencrypt/live/openldap.develop.medienhaus.dev/certificate.crt"
      LDAP_TLS_KEY_FILE: "/etc/letsencrypt/live/openldap.develop.medienhaus.dev/privatekey.key"
      LDAP_TLS_CA_FILE: "/etc/ssl/certs/ca-certificates.crt"
      #LDAP_TLS_DH_PARAMS_FILE: ""
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.openldap.entrypoints=ldapsecure"
      #- "traefik.http.routers.openldap.tls.certresolver=myresolver"
      #- "traefik.http.routers.openldap.rule=Host(`openldap.develop.medienhaus.dev`)"
      #traefik.enable: "true"
      #traefik.http.routers.openldap.entrypoints: "ldapsecure"
      #traefik.http.routers.openldap.tls.certresolver: "myresolver"
      #traefik.http.routers.openldap.rule: "Host(`openldap.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.tcp.routers.ldap-tcp.rule: "HostSNI(`*`)"
      traefik.tcp.routers.ldap-tcp.entrypoints: "ldap-tcp"
      traefik.udp.routers.ldap-udp.entrypoints: "ldap-udp"
      traefik.tcp.routers.ldaps.rule: "HostSNI(`*`)"
      traefik.tcp.routers.ldaps.entrypoints: "ldaps"
      traefik.tcp.routers.ldaps.tls: "true"
      traefik.tcp.routers.ldaps.tls.passthrough: "true"
      traefik.tcp.routers.ldaps.tls.certresolver: "myresolver"
    #ports:
    #  - "1389:1389"
    #  - "1636:1636"
    volumes:
      - ./data/openldap:/bitnami/openldap
      - ./data/traefik-certs-dumper:/etc/letsencrypt/live:ro

  # ------------------------------------------------------
  # etherpad
  # ------------------------------------------------------
  # /*
  # etherpad does not offer an official docker-compose.yml
  # which we could extend, hence the following composition
  # */
  # ------------------------------------------------------

  etherpad:
    build:
      context: ./etherpad-lite
      args:
        ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_table_of_contents"
        #ETHERPAD_PLUGINS: "ep_adminpads2 ep_comments_page ep_headings2 ep_markdown ep_mypads ep_table_of_contents"
    container_name: etherpad
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.etherpad.entrypoints=websecure"
      #- "traefik.http.routers.etherpad.tls.certresolver=myresolver"
      #- "traefik.http.routers.etherpad.rule=Host(`etherpad.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.http.routers.etherpad.entrypoints: "websecure"
      traefik.http.routers.etherpad.tls.certresolver: "myresolver"
      traefik.http.routers.etherpad.rule: "Host(`etherpad.develop.medienhaus.dev`)"
    #ports:
    #  - "9001:9001"

  # ------------------------------------------------------
  # rallly
  # ------------------------------------------------------

  rallly:
    #build: ./rallly
    build:
      context: ./rallly
      args:
        - "DATABASE_URL=postgres://rallly_user:super_sudo@postgres:5432/rallly?pgbouncer=true"
    container_name: rallly
    restart: unless-stopped
    command: /bin/sh -c "yarn prisma migrate deploy && yarn start"
    depends_on:
      - traefik
      - postgres
    #env_file:
    #  - ./rallly/.env
    environment:
      #- "DATABASE_URL=postgres://rallly_user:super_sudo@postgres:5432/rallly"
      DATABASE_URL: "postgres://rallly_user:super_sudo@postgres:5432/rallly"
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.rallly.entrypoints=websecure"
      #- "traefik.http.routers.rallly.tls.certresolver=myresolver"
      #- "traefik.http.routers.rallly.rule=Host(`rallly.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.http.routers.rallly.entrypoints: "websecure"
      traefik.http.routers.rallly.tls.certresolver: "myresolver"
      traefik.http.routers.rallly.rule: "Host(`rallly.develop.medienhaus.dev`)"
    #ports:
    #  - "3000:3000"

  # ------------------------------------------------------
  # spacedeck
  # ------------------------------------------------------

  spacedeck:
    build: ./spacedeck-open
    container_name: spacedeck
    restart: unless-stopped
    depends_on:
      - traefik
      - postgres
    labels:
      #- "traefik.enable=true"
      #- "traefik.http.routers.spacedeck.entrypoints=websecure"
      #- "traefik.http.routers.spacedeck.tls.certresolver=myresolver"
      #- "traefik.http.routers.spacedeck.rule=Host(`spacedeck.develop.medienhaus.dev`)"
      traefik.enable: "true"
      traefik.http.routers.spacedeck.entrypoints: "websecure"
      traefik.http.routers.spacedeck.tls.certresolver: "myresolver"
      traefik.http.routers.spacedeck.rule: "Host(`spacedeck.develop.medienhaus.dev`)"
    #ports:
    #  - "9666:9666"
    volumes:
      - ./spacedeck-open/config:/app/config
      - ./spacedeck-open/storage:/app/storage
      - ./spacedeck-open/database:/app/database

# ------------------------------------------------------
# networks
# ------------------------------------------------------

networks:
  default:
    driver: bridge

# ------------------------------------------------------
# volumes
# ------------------------------------------------------

#volumes:
#  openldap_data:
#    driver: local
